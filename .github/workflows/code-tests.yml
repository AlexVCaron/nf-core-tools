name: CI tests
# This workflow is triggered on pushes and PRs to the repository.
on: [push, pull_request]


jobs:
  Python:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install codecov 'pytest==3.6.4' pytest-datafiles pytest-cov mock jsonschema
        pytest --cov=nf_core .
    - name: Upload code coverage report
      if: success()
      run: codecov --rcfile=${GITHUB_WORKSPACE}/.github/coveragerc

  Markdown:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '10'
      - name: Install markdownlint
        run: npm install -g markdownlint-cli
      - name: Run Markdownlint
        run: markdownlint ${GITHUB_WORKSPACE} -c ${GITHUB_WORKSPACE}/.github/markdownlint.yml

  RunCode:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Install Nextflow dependencies
        run: |
          mkdir /tmp/nextflow
          cd /tmp/nextflow
          wget -qO- get.nextflow.io | bash
          sudo ln -s /tmp/nextflow/nextflow /usr/local/bin/nextflow
      - name: Run nf-core tools
        run: |
          nf-core create -n testpipeline -d "This pipeline is for testing" -a "Testing McTestface"
          nf-core lint nf-core-testpipeline
