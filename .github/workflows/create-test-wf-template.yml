name: Create a pipeline from a template and test it
on:
  push:
    branches:
      - dev
  pull_request:
  release:
    types: [published]

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  NXF_ANSI_LOG: false

jobs:
  RunTestWorkflow:
    runs-on: ubuntu-latest
    env:
      NXF_ANSI_LOG: false
    strategy:
      matrix:
        NXF_VER:
          - "23.04.0"
          - "latest-everything"
        TEMPLATE:
          - "template_skip_all.yml"
          - "template_skip_github_badges.yml"
          - "template_skip_igenomes.yml"
          - "template_skip_ci.yml"
          - "template_skip_nf_core_configs.yml"

    steps:
      - uses: actions/checkout@v3
        name: Check out source-code repository

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v1
        with:
          version: ${{ matrix.NXF_VER }}

      - name: Create template skip all (except github)
        run: |
          printf "prefix: my-prefix\nskip:['ci', 'github_badges', 'igenomes', 'nf_core_configs']" > template_skip_all.yml

      - name: Create template skip github_badges
        run: |
          printf "prefix: my-prefix\nskip: github_badges" > template_skip_github_badges.yml

      - name: Create template skip igenomes
        run: |
          printf "prefix: my-prefix\nskip: igenomes" > template_skip_igenomes.yml

      - name: Create template skip ci
        run: |
          printf "prefix: my-prefix\nskip: ci" > template_skip_ci.yml

      - name: Create template skip nf_core_configs
        run: |
          printf "prefix: my-prefix\nskip: nf_core_configs" > template_skip_nf_core_configs.yml

      - name: Run nf-core/tools
        run: |
          nf-core --log-file log.txt create -n testpipeline -d "This pipeline is for testing" -a "Testing McTestface" --template-yaml ${{ matrix.TEMPLATE }}
          nextflow run nf-core-testpipeline -profile test,docker --outdir ./results

      - name: Upload log file artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: nf-core-log-file
          path: log.txt
